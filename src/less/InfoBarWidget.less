@spinner-size: 12px;

.wwt-infoBarWidget {
	position: sticky;
	top: 0;
	display: flex;
	// z-index of 2 to be on top of page indicators (see [[mw:Help:Page status indicators]])
	z-index: 2;
	width: 100%;
	box-shadow: 0 2px 6px 0 rgba( 0, 0, 0, 0.25 );
	box-sizing: border-box;
	padding: 16px;
	color: #fff;

	.wwt-infoBarWidget-close.oo-ui-iconElement {
		margin: 0 1em;
		cursor: pointer;

		&.oo-ui-flaggedElement-pending {
			display: none;
		}
	}

	.skin-timeless & {
		top: 3.125em;
	}

	.skin-monobook & {
		margin-left: -1em;
		margin-bottom: 2em;
		// Correct for the negative margin + an extra 1em padding on the content div
		width: calc( 100% + 1em + 1em );

		// Since monobook uses 'Apex', we don't have the white (inverted)
		// version of the 'close' icon. For that skin, we'll inject data-uri
		.wwt-infoBarWidget-close.oo-ui-iconElement {
			// stylelint-disable-next-line function-url-quotes
			background-image: url( "data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='20' height='20' viewBox='0 0 20 20'%3E%3Ctitle%3Eclear%3C/title%3E%3Cg fill='%23fff'%3E%3Cpath d='M10 0a10 10 0 1 0 10 10A10 10 0 0 0 10 0zm5.66 14.24l-1.41 1.41L10 11.41l-4.24 4.25-1.42-1.42L8.59 10 4.34 5.76l1.42-1.42L10 8.59l4.24-4.24 1.41 1.41L11.41 10z'/%3E%3C/g%3E%3C/svg%3E" );
			height: 1.42857143em; // Duplicate from WikimediaUI
			width: 1.42857143em;
		}
	}

	.skin-vector & {
		// This duplicates Vector, making sure that the
		// bar stops at the edge of the content even though
		// it is outside the content box itself.
		width: calc( 100% + 1.5em + 1.5em );
		// content body has 1.25em padding top
		margin-top: -1.25em;
		// put in some space before the heading
		margin-bottom: 1em;

		.ltr& {
			// adjust for content body padding
			margin-left: -1em;

			@media screen and ( min-width: 982px ) {
				margin-left: -1.5em;
			}
		}

		.rtl& {
			// adjust for content body padding
			margin-right: -1em;

			@media screen and ( min-width: 982px ) {
				margin-right: -1.5em;
			}
		}
	}

	.oo-ui-iconElement-icon {
		width: 1em;
	}

	.oo-ui-labelElement-label {
		flex-grow: 2;
		margin-left: 2em;

		.rtl & {
			margin-left: 0;
			margin-right: 2em;
		}
	}

	&.oo-ui-flaggedElement-pending {
		background-color: #2a4b8d;

		.wwt-infoBarWidget-spinner {
			display: inline-block;
			width: 50px;
			white-space: nowrap;

			.wwt-infoBarWidget-spinner-bounce,
			&::before,
			&::after {
				content: '';
				background-color: #fff;
				display: block;
				float: left;
				margin-top: @spinner-size / 2;
				width: @spinner-size;
				height: @spinner-size;
				border-radius: 100%;
				animation: wwtBouncedelay 1600ms ease-in-out -160ms infinite both;
			}

			&::before {
				margin-right: 4px;
				animation-delay: -330ms;
			}

			&::after {
				margin-left: 4px;
				animation-delay: 0s;
			}
		}
	}

	&.oo-ui-flaggedElement-err {
		background-color: #b32424;

		.oo-ui-labelElement-label {
			margin-left: 2em;
		}

		a {
			color: #fff;
			text-decoration: underline;
		}
	}

	&.oo-ui-flaggedElement-ready {
		background-color: #36c;

		.wwt-infoBarWidget-info.oo-ui-labelWidget {
			text-align: right;

			.rtl & {
				text-align: left;
			}
		}
	}
}

@keyframes wwtBouncedelay {
	0%,
	50%,
	100% {
		transform: scale( 0.625 );
	}

	20% { // equals 320ms
		opacity: 0.87;
		transform: scale( 1 );
	}
}
